{{#operations}}//
// {{classname}}.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import NetworkLayer

{{#description}}
/** {{description}} */{{/description}}
public class {{classname}} {
    private init() {}
{{#operation}}
    {{#allParams}}
    {{#isEnum}}
    /**
     * enum for parameter {{paramName}}
     */
    public enum {{enumName}}_{{operationId}}: {{^isContainer}}{{{dataType}}}{{/isContainer}}{{#isContainer}}String{{/isContainer}} { {{#allowableValues}}{{#enumVars}}
        case {{name}} = {{#isContainer}}"{{/isContainer}}{{#isString}}"{{/isString}}{{{value}}}{{#isString}}"{{/isString}}{{#isContainer}}"{{/isContainer}}{{/enumVars}}{{/allowableValues}}
    }

    {{/isEnum}}
    {{/allParams}}

    public class {{operationIdCamelCase}}Endpoint: EndpointType {
        public let path: String
        public let httpMethod = HttpMethod.{{httpMethod.toLowerCase}}
        public let task: HttpTask<{{#bodyParam}}{{{dataType}}}{{/bodyParam}}{{^bodyParam}}EmptyParam{{/bodyParam}}>
        public init(path: String{{#bodyParam}}, body: {{{dataType}}}{{/bodyParam}}{{#hasQueryParams}}, queryParams: Parameters{{/hasQueryParams}}) {
            self.path = path
            self.task = {{#bodyParam}}.requestWithParameters(bodyParameters: body, queryParameters: {{#hasQueryParams}}queryParams{{/hasQueryParams}}{{^hasQueryParams}}nil{{/hasQueryParams}}){{/bodyParam}}{{^bodyParam}}{{#hasQueryParams}}.requestWithParameters(bodyParameters: nil, queryParameters: queryParams){{/hasQueryParams}}{{^hasQueryParams}}.request{{/hasQueryParams}}{{/bodyParam}}
        }
    }

    /**
     {{#summary}}
     {{{summary}}}
     {{/summary}}{{#allParams}}
     - parameter {{paramName}}: ({{#isFormParam}}form{{/isFormParam}}{{#isQueryParam}}query{{/isQueryParam}}{{#isPathParam}}path{{/isPathParam}}{{#isHeaderParam}}header{{/isHeaderParam}}{{#isBodyParam}}body{{/isBodyParam}}) {{description}} {{^required}}(optional{{#defaultValue}}, default to {{{.}}}{{/defaultValue}}){{/required}}{{/allParams}}
     - parameter completion: completion handler to receive the data and the error objects
     */
    public static func {{operationId}}({{#allParams}}{{paramName}}: {{#isEnum}}{{#isContainer}}{{{dataType}}}{{/isContainer}}{{^isContainer}}{{{datatypeWithEnum}}}_{{operationId}}{{/isContainer}}{{/isEnum}}{{^isEnum}}{{{dataType}}}{{/isEnum}}{{^required}}? = nil{{/required}}{{#hasMore}}, {{/hasMore}}{{/allParams}}{{#hasParams}}, {{/hasParams}}completion: @escaping NetworkRouterCompletion<{{#returnType}}{{{returnType}}}{{/returnType}}{{^returnType}}EmptyResponse{{/returnType}}>) {
        {{^pathParams}}let{{/pathParams}}{{#pathParams}}{{^secondaryParam}}var{{/secondaryParam}}{{/pathParams}} path = "{{{path}}}"{{#pathParams}}
        let {{paramName}}Escaped = "\({{paramName}}{{#isEnum}}{{#isContainer}}{{{dataType}}}{{/isContainer}}{{^isContainer}}.rawValue{{/isContainer}}{{/isEnum}})".addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{{=<% %>=}}{<%baseName%>}<%={{ }}=%>", with: {{paramName}}Escaped, options: .literal, range: nil){{/pathParams}}{{#hasQueryParams}}
        var params: [String: Any] = [:]
        {{#queryParams}}{{#required}}params["{{baseName}}"] = {{paramName}}{{#isEnum}}{{^isContainer}}.rawValue{{/isContainer}}{{/isEnum}}
        {{/required}}{{/queryParams}}
        {{#queryParams}}{{^required}}if let {{paramName}} = {{paramName}} {
            params["{{baseName}}"] = {{paramName}}{{#isEnum}}{{^isContainer}}.rawValue{{/isContainer}}{{/isEnum}}
        }
        {{/required}}{{/queryParams}}{{/hasQueryParams}}
        let endpoint = {{operationIdCamelCase}}Endpoint(path: path{{#bodyParam}}, body: {{paramName}}{{/bodyParam}}{{#hasQueryParams}}, queryParams: params{{/hasQueryParams}})
        let router = Router<{{operationIdCamelCase}}Endpoint, {{#returnType}}{{{returnType}}}{{/returnType}}{{^returnType}}EmptyResponse{{/returnType}}>()
        router.request(with: endpoint, completion: completion)
    }
{{/operation}}
}
{{/operations}}
